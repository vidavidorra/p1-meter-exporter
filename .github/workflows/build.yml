name: Build
on:
  push:
    branches:
      - main
      - beta
      - 'renovate/**'
      - 'github-renovate/**'
  pull_request:
jobs:
  lint:
    uses: vidavidorra/.github/.github/workflows/node-lint.yml@c37429b00cfa4cf5503248f0aef09b452fe36660 # v4.1.4
  build:
    name: Build (Node.js ${{ matrix.nodeVersion }})
    strategy:
      fail-fast: false
      matrix:
        nodeVersion: [18, 19]
    uses: vidavidorra/.github/.github/workflows/node-build.yml@c37429b00cfa4cf5503248f0aef09b452fe36660 # v4.1.4
    with:
      nodeVersion: ${{ matrix.nodeVersion }}
  release:
    needs: [lint, build]
    runs-on: ubuntu-latest
    # GitHub API requests can easy take a couple of seconds and the release can
    # make lots of API requests when a release has a lot of commits. If every
    # requests takes five seconds, which is on the high side for a request, this
    # could perform 180 requests. This should be enough for most use cases.
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          persist-credentials: false
      - name: Setup node
        uses: actions/setup-node@b39b52d1213e96004bfcb1c61a8a6fa8ab84f3e8 # v4.0.1
        with:
          node-version: 18
      - name: Install project
        run: npm ci --ignore-scripts
      - name: GitHub App token
        id: app-token
        uses: vidavidorra/github-app-token@3bfc462f0355ce6268121fdb6c140a8bb4c6839a # v1.0.1
        with:
          appId: ${{ secrets.RELEASE_APP_ID }}
          privateKey: ${{ secrets.RELEASE_PRIVATE_KEY }}
          includeUserInformation: true
      - name: Release
        env:
          DOCKER_REGISTRY_USER: ${{ vars.GH_PACKAGES_USERNAME }}
          DOCKER_REGISTRY_PASSWORD: ${{ secrets.GH_PACKAGES_TOKEN }}
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
          GIT_AUTHOR_NAME: ${{ steps.app-token.outputs.username }}
          GIT_AUTHOR_EMAIL: ${{ steps.app-token.outputs.email }}
          GIT_COMMITTER_NAME: ${{ steps.app-token.outputs.username }}
          GIT_COMMITTER_EMAIL: ${{ steps.app-token.outputs.email }}
        run: npx --no-install semantic-release
